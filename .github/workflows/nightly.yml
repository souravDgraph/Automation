# This is a basic workflow to help you get started with Actions

name: nightly

# Controls when the action will run. 
on:
  # Triggers the workflow
  schedule:
     # * is a special character in YAML so you have to quote this string
     - cron:  '0 1 * * *'
     
     - cron:  '0 13 * * *'
     

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    timeout-minutes: 4320

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          path: Automation_workspace
        
      - name: Setup Python
        uses: actions/setup-python@v2.2.1
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.8.7 # optional, default is 3.x
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x64 # optional
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          token: ${{ github.token }} # optional, default is ${{ github.token }}
          
      # Navigating to the directory and installing the requiremenets file
      - name: Install requirements for Dgraph and Slash
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace/utilities
          ls -alh
          python3 env_setup.py -l All -c enabled
        
      - name: Configuring docker-compose file
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace/utilities
          ls -alh
          python3 create_docker_yml.py -v master -c enabled
        
      # Download Dgraph Repo
      - name: Check out Dgraph repo
        uses: actions/checkout@master
        with:
          repository: dgraph-io/dgraph
          clean: false  
          path: dgraph_workspace  
        
          
      # Build Dgraph
      -  name: Build Dgraph on GitAction Runner
         run: |
           cd dgraph_workspace/dgraph
           make install
           sudo go build
           ls
           ./dgraph version
           sudo mv ./dgraph /bin
           dgraph version
           
#       -  name: Build Dgraph on Self-Hosted Runner
#          run: |
#            cd dgraph_workspace/dgraph
#            make install
#            # sudo go build
#            # ls
#            # ./dgraph version
#            # sudo mv ./dgraph /bin
#            dgraph version
         
      - name: Run Robot Framework Testcases
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace
          
          # ---- Commenting the below lines as Git Actions are failing, due to heavy workload. ----
          # sed -i "s/1million/21million/g" test_suites/dgraph/Linux/dgraph_suite_01.robot
          # cd ./test_data/datasets
          # wget -q https://github.com/dgraph-io/benchmarks/raw/master/data/21million.rdf.gz
          # wget -q https://github.com/dgraph-io/benchmarks/raw/master/data/21million.schema
          # zcat 21million.rdf.gz | head -n 5
          # head 21million.schema
          # cd ../..
          # ----------------------------------------------------------------------------------------
          
          mkdir -p backup
          tree
          cat test_suites/dgraph/Linux/dgraph_suite_01.robot
          echo " ---- Running Dgraph Testcases ----"
          robot test_suites/dgraph/Linux/dgraph_suite_01.robot
          
          # These are commented as we do not have a fixed bearer token, once we have those we will enable the below TCs.
          # echo " ---- Running Slash Testcases ----"
          # robot test_suites/slash/slash_api/sanity.robot
      
      
      # Getting Current time
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        if: always()
        id: current-time
        with:
          format: YYYYMMDD-HH_mm_ss
          utcOffset: "+05:30"
      
      # Publish Artifacts
      - name: Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        if: always()
        with: 
          name: automationArtifact_${{ steps.current-time.outputs.formattedTime }}
          path: |
            ${{ github.workspace }}/Automation_workspace/
            !${{ github.workspace }}/Automation_workspace/test_data
            !${{ github.workspace }}/Automation_workspace/doc
        
