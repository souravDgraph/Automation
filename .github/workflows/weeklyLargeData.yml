# This is a basic workflow to help you get started with Actions

name: weeklyLargeData

# Controls when the action will run. 
on:
  # Triggers the workflow
#   schedule:     
#      - cron:  '0 22 * * 6'
#      - cron:  '0 10 * * 3'
     

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        dgraphBranch:
          description: 'Dgraph Branch'     
          required: true
          default: 'release/v21.03'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, dgus-bravo]
    timeout-minutes: 5320
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Install requirements for Dgraph and Slash
        run: |
          sudo rm -rf ${{ github.workspace }}/Automation_workspace_weeklyLargeData
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          path: Automation_workspace_weeklyLargeData
        
      - name: Setup Python
        uses: actions/setup-python@v2.2.1
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.8.7 # optional, default is 3.x
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x64 # optional
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          token: ${{ github.token }} # optional, default is ${{ github.token }}
          
      # Navigating to the directory and installing the requiremenets file
      - name: Install requirements for Dgraph and Slash
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace_weeklyLargeData/utilities
          ls -alh
          sudo python3 env_setup.py -l All -c enabled
        
      - name: Configuring docker-compose file
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace_weeklyLargeData/utilities
          ls -alh
          sudo python3 create_docker_yml.py -v master -c enabled
        
      # Download Dgraph Repo
      - name: Check out Dgraph repo
        uses: actions/checkout@master
        with:
          repository: dgraph-io/dgraph
          ref: ${{ github.event.inputs.dgraphBranch }}
          clean: false   
          path: dgraph_workspace_weeklyLargeData 
        
          
      # Build Dgraph          
      -  name: Build Dgraph on Self-Hosted Runner
         run: |
           cd dgraph_workspace_weeklyLargeData/dgraph
           make install
           dgraph version
           sudo cp /home/dg/go/bin/dgraph /usr/bin/
           sudo dgraph version
         
      - name: Run Robot Framework Testcases
        run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/Automation_workspace_weeklyLargeData
          # ---- Commenting the below lines as Git Actions are failing, due to heavy workload. ----
          sed -i "s/1million/stackoverflow/g" test_suites/dgraph/Linux/dgraph_suite_01.robot
          cd ./test_data/datasets
          # wget -q https://storage.googleapis.com/dgraph-datasets/stackoverflow/stackoverflow.com.rdf.gz
          # wget -q https://storage.googleapis.com/dgraph-datasets/stackoverflow/stackoverflow.schema
          # mv ./stackoverflow.com.rdf.gz ./stackoverflow.rdf.gz
          cp /ssd/qa/CopyofStackoverflowData/* ./
          zcat stackoverflow.rdf.gz | head -n 5
          head stackoverflow.schema
          cd ../..
          mkdir -p backup
          tree
          cat test_suites/dgraph/Linux/dgraph_suite_01.robot
          echo " ---- Running Dgraph Testcases ----"
          sudo robot --splitlog --include WEEKLY -d results/ --loglevel TRACE:INFO test_suites/dgraph/Linux/dgraph_suite_01.robot
      
      - name: Backup Result folder and list contents
        run: |
            cd ${{ github.workspace }}/Automation_workspace_weeklyLargeData
            mv results /ssd/qa/results_last_weeklyLargeData_run
            cd /ssd/qa/results_last_weeklyLargeData_run
            pwd
            ls
            mkdir  ${{ github.workspace }}/Automation_workspace_weeklyLargeData/results
            
      # delete dgraph from root:
      - name: Delete dgraph from root
        run: |
            sudo rm -rf /usr/bin/dgraph  
      
#       # Getting Current time
#       - name: Get current time
#         uses: 1466587594/get-current-time@v2
#         if: always()
#         id: current-time
#         with:
#           format: YYYYMMDD-HH_mm_ss
#           utcOffset: "+05:30"
      
#       # Publish Artifacts
#       - name: Use the Upload Artifact GitHub Action
#         uses: actions/upload-artifact@v2
#         if: always()
#         with: 
#           name: automationArtifact_${{ steps.current-time.outputs.formattedTime }}
#           path: |
#             ${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/
#             !${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/output.xml
#             !${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/p
#             !${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/w
#             !${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/zw
#             !${{ github.workspace }}/Automation_workspace_weeklyLargeData/results/t
        
